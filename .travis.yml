language: cpp

addons:
  apt:
    packages: &global_deps
    - libsqlite3-dev
    - libcurl4-openssl-dev
    - libxml2-dev
    - libstfl-dev
    - libjson-c-dev
    - libncursesw5-dev
    - asciidoc
addons:
  apt:
    packages: &clang_deps
    - *global_deps
    - g++-4.9 # required for some niceties in C++ standard library

install_coveralls_commands: &install_coveralls
  - pip install --user cpp-coveralls

newsbeuter_brew_commands: &osx_deps
  - brew outdated "pkg-config" || brew upgrade "pkg-config"
  - brew install "gettext" && brew link --force "gettext"
  - brew outdated "sqlite" || brew upgrade "sqlite"
  - brew outdated "curl" || brew upgrade "curl"
  - brew install "libstfl"
  - brew outdated "json-c" || brew upgrade "json-c"
  - brew install "asciidoc"
  - brew outdated "python" || brew upgrade "python"
  - brew install "pyenv" || brew upgrade "pyenv"
  - eval "$(pyenv init -)"
  - pip2 install cpp-coveralls
  - pyenv rehash

matrix:
  fast_finish: true
  include:
    - compiler: gcc-4.9
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
            - *global_deps
      env:
        - COMPILER=g++-4.9
        - GCOV=/usr/bin/gcov-4.9
      before_install:
        *install_coveralls
    - compiler: gcc-5
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - *global_deps
      env:
        - COMPILER=g++-5
        - GCOV=/usr/bin/gcov-5
      before_install:
        *install_coveralls
    - compiler: gcc-6
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - *global_deps
      env:
        - COMPILER=g++-6
        - GCOV=/usr/bin/gcov-6
      before_install:
        *install_coveralls
    - compiler: gcc-7
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - *global_deps
      env:
        - COMPILER=g++-7
        - GCOV=/usr/bin/gcov-7
      before_install:
        *install_coveralls
    - compiler: clang
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - *clang_deps
      env:
        - COMPILER=clang++
        - GCOV=/usr/bin/gcov
      before_install:
        *install_coveralls
    - compiler: clang-4.0
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
            - *clang_deps
      env:
        - COMPILER=clang++-4.0
        - GCOV=/usr/bin/gcov
      before_install:
        *install_coveralls
    - compiler: clang-5.0
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
            - *clang_deps
      env:
        - COMPILER=clang++-5.0
        - GCOV=/usr/bin/gcov
      before_install:
        *install_coveralls
    - compiler: gcc
      os: osx
      env:
        - COMPILER=g++
        - GCOV=/usr/bin/gcov
        # a2x will run xmllint on generated files, so we have to pass the path
        # to AsciiDoc's catalog files
        - XML_CATALOG_FILES=/usr/local/etc/xml/catalog
      before_install:
        *osx_deps
    - compiler: clang
      os: osx
      env:
        - COMPILER=clang++
        - GCOV=/usr/bin/gcov
        # a2x will run xmllint on generated files, so we have to pass the path
        # to AsciiDoc's catalog files
        - XML_CATALOG_FILES=/usr/local/etc/xml/catalog
      before_install:
        *osx_deps
    - addons:
        apt:
          packages:
            - i18nspector
      env:
        - CHECKS=1

install:
  - export CXX=$COMPILER
  - cd ${TRAVIS_BUILD_DIR}

script:
  - cd ${TRAVIS_BUILD_DIR}
  # Compiling with optimizations enabled to get as accurate warnings as
  # possible
  - if [ -z "$CHECKS" ]; then   cmake -DCMAKE_BUILD_TYPE=Release . && make ; fi
  - if [ -z "$CHECKS" ]; then   make clean   ; fi
  - if [ -z "$CHECKS" ]; then   cmake -DCMAKE_BUILD_TYPE=Debug . && make ; fi
  - if [ -z "$CHECKS" ]; then   ( cd test && ./catch_tests --order rand )   ; fi
  - if [ -n "$CHECKS" ]; then   make run-i18nspector | tee i18nspector.log && if `egrep '^(E|W):' i18nspector.log >/dev/null 2>&1` ; then false else true; fi   ; fi

after_success:
  - cd ${TRAVIS_BUILD_DIR}
  - if [ -z "$CHECKS" ]; then   ./submit-to-coveralls.sh   ; fi
